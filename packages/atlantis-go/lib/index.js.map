{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @file index.ts\n * @description Main entry point for Atlantis Go server\n */\n\nimport express from 'express';\nimport * as http from 'http';\nimport cors from 'cors';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\nimport { Server, Client } from '@colyseus/core';\nimport { WebSocketTransport } from '@colyseus/ws-transport';\nimport { WorldRoom } from './rooms/WorldRoom.js';\nimport { matchMaker } from '@colyseus/core';\n\n// Environment configuration with defaults\nconst ENV = {\n  PORT: Number(process.env.PORT || 3000),\n  NODE_ENV: process.env.NODE_ENV || 'development',\n  MAX_PAYLOAD_SIZE: process.env.MAX_PAYLOAD_SIZE || '50mb',\n  CORS_ORIGIN: process.env.CORS_ORIGIN || '*'\n};\n\n// Wrap the entire initialization in a try/catch to catch any initialization errors\ntry {\n  // ES Module compatibility\n  const __filename = fileURLToPath(import.meta.url);\n  const __dirname = path.dirname(__filename);\n\n  // Get absolute path to the public directory - only go up one level from src\n  const publicPath = path.resolve(__dirname, '../public');\n\n  console.log('Public directory path:', publicPath);\n  console.log('Environment:', ENV.NODE_ENV);\n\n  // Create express app and server\n  const app = express();\n  \n  // Enhanced security and performance middleware\n  app.use(cors({\n    origin: ENV.CORS_ORIGIN,\n    methods: ['GET', 'POST'],\n    allowedHeaders: ['Content-Type', 'Authorization']\n  }));\n  app.use(express.json({ limit: ENV.MAX_PAYLOAD_SIZE }));\n  app.use(express.urlencoded({ extended: true, limit: ENV.MAX_PAYLOAD_SIZE }));\n  \n  // Basic security headers\n  app.use((req, res, next) => {\n    res.setHeader('X-Content-Type-Options', 'nosniff');\n    res.setHeader('X-Frame-Options', 'DENY');\n    res.setHeader('X-XSS-Protection', '1; mode=block');\n    next();\n  });\n\n  // Serve static files from the public directory\n  app.use(express.static(publicPath, {\n    maxAge: ENV.NODE_ENV === 'production' ? '1d' : 0\n  }));\n\n  // Enhanced health check endpoint\n  app.get('/health', (req, res) => {\n    const health = {\n      status: 'ok',\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime(),\n      memory: process.memoryUsage(),\n      environment: ENV.NODE_ENV\n    };\n    res.json(health);\n  });\n\n  // For debugging - list available routes (only in development)\n  if (ENV.NODE_ENV === 'development') {\n    app.get('/debug-routes', (req, res) => {\n      const routes = [];\n      app._router.stack.forEach(middleware => {\n        if (middleware.route) {\n          routes.push({\n            path: middleware.route.path,\n            methods: Object.keys(middleware.route.methods)\n          });\n        } else if (middleware.name === 'router') {\n          middleware.handle.stack.forEach(handler => {\n            if (handler.route) {\n              routes.push({\n                path: handler.route.path,\n                methods: Object.keys(handler.route.methods)\n              });\n            }\n          });\n        }\n      });\n      res.json({ routes, publicPath });\n    });\n  }\n\n  // Create Colyseus server with enhanced configuration\n  const transport = new WebSocketTransport({\n    server: http.createServer(app),\n    pingInterval: 8000, // Check connection every 8 seconds\n    pingMaxRetries: 3 // Allow 3 failed pings before disconnect\n  });\n  \n  const gameServer = new Server({\n    transport,\n    presence: undefined // Will be configured when needed\n  });\n\n  // Register rooms\n  gameServer.define('world', WorldRoom);\n\n  // Add a simple status endpoint\n  app.get('/status', async (req, res) => {\n    const rooms = await matchMaker.query({ });\n    const connectedClients = rooms.reduce((acc, room) => acc + room.clients, 0);\n    \n    res.json({\n      status: 'ok',\n      uptime: process.uptime(),\n      serverTime: new Date().toISOString(),\n      rooms: rooms.length,\n      clients: connectedClients\n    });\n  });\n\n  // Error handling middleware\n  app.use((err: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\n    console.error('Unhandled error:', err);\n    res.status(500).json({\n      error: ENV.NODE_ENV === 'development' ? err.message : 'Internal server error'\n    });\n  });\n\n  // Redirect root to the world map client\n  app.get('/', (req, res) => {\n    res.redirect('/index.html');\n  });\n\n  // Start the server\n  gameServer.listen(ENV.PORT).then(() => {\n    console.log(`🎮 Atlantis Go server is running on http://localhost:${ENV.PORT}`);\n    console.log(`🌐 WebSocket server is ready for clients`);\n    console.log(`🗺️ World Map client available at http://localhost:${ENV.PORT}/index.html`);\n  }).catch(err => {\n    console.error('Failed to start server:', err);\n    process.exit(1);\n  });\n\n  // Enhanced graceful shutdown\n  const gracefulShutdown = async () => {\n    console.log('Server is shutting down...');\n    try {\n      // Get all active rooms\n      const rooms = await matchMaker.query({ });\n      \n      // Notify all clients in all rooms\n      for (const roomData of rooms) {\n        const room = await matchMaker.getRoomById(roomData.roomId);\n        if (room) {\n          room.clients.forEach((client: Client) => {\n            client.send('shutdown', { message: 'Server is shutting down for maintenance' });\n          });\n        }\n      }\n      \n      // Wait for rooms to close\n      await gameServer.gracefullyShutdown();\n      console.log('Graceful shutdown complete');\n      process.exit(0);\n    } catch (err) {\n      console.error('Error during shutdown:', err);\n      process.exit(1);\n    }\n  };\n\n  // Handle different termination signals\n  process.on('SIGINT', gracefulShutdown);\n  process.on('SIGTERM', gracefulShutdown);\n  \n  // Handle uncaught errors\n  process.on('uncaughtException', (err) => {\n    console.error('Uncaught exception:', err);\n    gracefulShutdown();\n  });\n  \n  process.on('unhandledRejection', (reason, promise) => {\n    console.error('Unhandled rejection at:', promise, 'reason:', reason);\n  });\n  \n} catch (err) {\n  console.error('CRITICAL INITIALIZATION ERROR:', err);\n  process.exit(1);\n} "]}