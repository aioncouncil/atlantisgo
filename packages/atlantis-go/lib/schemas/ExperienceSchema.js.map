{"version":3,"file":"ExperienceSchema.js","sourceRoot":"","sources":["../../src/schemas/ExperienceSchema.ts"],"names":[],"mappings":"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","sourcesContent":["import { Schema, type, ArraySchema, MapSchema } from '@colyseus/schema';\nimport { Position } from './index.js';\nimport { nanoid } from 'nanoid';\n\n/**\n * A phase within an experience\n */\nexport class ExperiencePhase extends Schema {\n  @type(\"string\") id: string;\n  @type(\"string\") type: string;\n  @type(\"string\") prompt: string;\n  @type(\"number\") timeLimit: number = 300; // 5 minutes default\n  @type(\"boolean\") completed: boolean = false;\n  @type(\"string\") submission: string = \"\";\n\n  constructor(id: string, type: string, prompt: string) {\n    super();\n    this.id = id;\n    this.type = type;\n    this.prompt = prompt;\n  }\n}\n\n/**\n * Represents an experience template that can be instantiated\n */\nexport class Experience extends Schema {\n  @type(\"string\") id: string;\n  @type(\"string\") name: string;\n  @type(\"string\") description: string = \"\";\n  @type(\"string\") type: string;\n  @type(\"string\") difficulty: string;\n  @type(\"number\") minLevel: number = 1;\n  @type(\"number\") maxParticipants: number = 1;\n  @type(Position) position = new Position(0, 0);\n  @type(\"number\") radius: number = 50;\n  @type(\"number\") spawnTime: number = Date.now();\n  @type(\"number\") despawnTime: number = Date.now() + 86400000; // 24 hours default\n  @type(\"boolean\") isActive: boolean = true;\n\n  constructor(id: string, name: string, type: string, difficulty: string) {\n    super();\n    this.id = id;\n    this.name = name;\n    this.type = type;\n    this.difficulty = difficulty;\n  }\n\n  createInstance(playerId: string): ExperienceInstance {\n    const instanceId = `${this.id}_${playerId}_${Date.now()}`;\n    return new ExperienceInstance(instanceId, this.id, playerId);\n  }\n}\n\n/**\n * Represents a participant in an experience instance\n */\nexport class ExperienceParticipant extends Schema {\n  @type(\"string\") userId: string;\n  @type(\"string\") role: string = \"Participant\";\n  @type(\"string\") status: string = \"Active\"; // \"Active\", \"Completed\", \"Failed\"\n  @type(\"number\") joinTime: number = Date.now();\n  @type(\"number\") completeTime: number = 0;\n  \n  constructor(userId: string, role: string = \"Participant\") {\n    super();\n    this.userId = userId;\n    this.role = role;\n  }\n  \n  complete(): void {\n    this.status = \"Completed\";\n    this.completeTime = Date.now();\n  }\n  \n  fail(): void {\n    this.status = \"Failed\";\n    this.completeTime = Date.now();\n  }\n}\n\n/**\n * Represents an activity submission within an experience\n */\nexport class ExperienceActivity extends Schema {\n  @type(\"string\") id: string;\n  @type(\"string\") userId: string;\n  @type(\"string\") content: string = \"\";\n  @type(\"number\") timestamp: number = Date.now();\n  @type(\"boolean\") verified: boolean = false;\n  \n  constructor(userId: string, content: string) {\n    super();\n    this.id = nanoid();\n    this.userId = userId;\n    this.content = content;\n  }\n  \n  verify(): void {\n    this.verified = true;\n  }\n}\n\n/**\n * Represents an active instance of an experience\n */\nexport class ExperienceInstance extends Schema {\n  @type(\"string\") id: string;\n  @type(\"string\") experienceId: string;\n  @type(\"string\") playerId: string;\n  @type(\"number\") startTime: number = Date.now();\n  @type(\"number\") endTime: number = 0;\n  @type(\"boolean\") completed: boolean = false;\n  @type(\"number\") currentPhase: number = 0;\n  @type({ array: ExperiencePhase }) phases = new ArraySchema<ExperiencePhase>();\n\n  constructor(id: string, experienceId: string, playerId: string) {\n    super();\n    this.id = id;\n    this.experienceId = experienceId;\n    this.playerId = playerId;\n  }\n\n  addPhase(phase: ExperiencePhase) {\n    this.phases.push(phase);\n  }\n\n  completePhase(submission: any) {\n    if (this.currentPhase < this.phases.length) {\n      this.phases[this.currentPhase].completed = true;\n      this.phases[this.currentPhase].submission = submission;\n      this.currentPhase++;\n\n      if (this.currentPhase >= this.phases.length) {\n        this.completed = true;\n        this.endTime = Date.now();\n      }\n    }\n  }\n} "]}