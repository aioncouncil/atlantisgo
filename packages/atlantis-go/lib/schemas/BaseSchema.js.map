{"version":3,"file":"BaseSchema.js","sourceRoot":"","sources":["../../src/schemas/BaseSchema.ts"],"names":[],"mappings":"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","sourcesContent":["import { Schema, type, MapSchema } from '@colyseus/schema';\n\nexport class Position extends Schema {\n  @type(\"number\") x: number = 0;\n  @type(\"number\") y: number = 0;\n\n  constructor(x: number = 0, y: number = 0) {\n    super();\n    this.x = x;\n    this.y = y;\n  }\n\n  distanceTo(other: Position): number {\n    const dx = this.x - other.x;\n    const dy = this.y - other.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n}\n\nexport class SimplePlayer extends Schema {\n  @type(\"string\") id: string;\n  @type(\"string\") username: string;\n  @type(\"number\") x: number = 0;\n  @type(\"number\") y: number = 0;\n  @type(\"number\") level: number = 1;\n  @type(\"number\") experience: number = 0;\n  @type(\"string\") avatarUrl: string = \"\";\n  @type(\"number\") rank: number = 1;\n  @type(\"number\") xp: number = 0;\n  @type(\"string\") currentZoneId: string = \"\";\n  @type(\"boolean\") isActive: boolean = true;\n  @type(\"number\") lastActivity: number = Date.now();\n  @type({ map: \"string\" }) powers = new MapSchema<string>();\n  @type(\"string\") state: string = \"idle\";\n  @type(\"string\") status: string = \"online\";\n  @type(\"number\") lastUpdateTime: number = Date.now();\n  @type({ map: \"string\" }) metadata = new MapSchema<string>();\n\n  constructor(id: string, username: string) {\n    super();\n    this.id = id;\n    this.username = username;\n  }\n\n  setState(state: string) {\n    this.state = state;\n  }\n\n  setZone(zoneId: string) {\n    this.currentZoneId = zoneId;\n  }\n\n  markInactive() {\n    this.isActive = false;\n    this.status = \"offline\";\n  }\n}\n\nexport class SimplePower extends Schema {\n  @type(\"string\") _id: string;\n  @type(\"string\") id: string;\n  @type(\"string\") name: string;\n  @type(\"string\") type: string;\n  @type(\"string\") rarity: string;\n  @type(\"number\") x: number = 0;\n  @type(\"number\") y: number = 0;\n  @type(\"boolean\") isActive: boolean = true;\n  @type(\"number\") spawnedAt: number = Date.now();\n  @type(\"string\") description: string = \"\";\n  @type(\"string\") matrixQuadrant: string = \"\";\n  @type(\"string\") captureChallenge: string = \"\";\n\n  constructor(id: string, name: string, type: string, rarity: string) {\n    super();\n    this._id = id;\n    this.id = id;\n    this.name = name;\n    this.type = type;\n    this.rarity = rarity;\n  }\n}\n\nexport class SimpleZone extends Schema {\n  @type(\"string\") id: string;\n  @type(\"string\") name: string;\n  @type(\"string\") type: string;\n  @type(\"number\") x: number = 0;\n  @type(\"number\") y: number = 0;\n  @type(\"number\") radius: number = 100;\n  @type({ map: \"string\" }) players = new MapSchema<string>();\n  @type({ map: \"string\" }) attributes = new MapSchema<string>();\n\n  constructor(id: string, name: string, type: string) {\n    super();\n    this.id = id;\n    this.name = name;\n    this.type = type;\n  }\n\n  addPlayer(playerId: string) {\n    this.players.set(playerId, playerId);\n  }\n\n  removePlayer(playerId: string) {\n    this.players.delete(playerId);\n  }\n\n  containsPosition(pos: { x: number, y: number }): boolean {\n    const dx = this.x - pos.x;\n    const dy = this.y - pos.y;\n    return Math.sqrt(dx * dx + dy * dy) <= this.radius;\n  }\n}\n\nexport class SimplifiedWorldState extends Schema {\n  @type(\"string\") name: string = \"Main World\";\n  @type(\"number\") tick: number = 0;\n  @type(\"number\") worldTime: number = Date.now();\n  @type({ map: SimplePlayer }) players = new MapSchema<SimplePlayer>();\n  @type({ map: SimplePower }) powers = new MapSchema<SimplePower>();\n  @type({ map: SimpleZone }) zones = new MapSchema<SimpleZone>();\n  @type({ map: \"string\" }) experienceInstances = new MapSchema<string>();\n  @type({ map: \"string\" }) experiences = new MapSchema<string>();\n\n  updateTick() {\n    this.tick++;\n    this.worldTime = Date.now();\n  }\n} "]}